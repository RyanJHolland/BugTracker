@model TicketTracker.ViewModels.ProjectsIndex

@{ ViewData["Title"] = "View All Projects"; }

<h2 class="mb-header">All Projects</h2>

<div class="row">
	<div class="col">
		@if (Model.UserCanCreateProject)
		{		
			<a asp-action="Create" class="">
				<button class="btn btn-sm btn-outline-primary">
				<i class="fas fa-plus-circle"></i> New Project
			</button>
			</a>
		}
	</div>

	<div class="col d-flex justify-content-end">
		<partial name="IndexComponents/_searchInput.cshtml" /> 
	</div>
</div>

@if (Model.Projects.Count() > 0)
{		
	<div class="break-long-words">
	<table class="table text-color">
		<thead>
			<tr>

				<th>
					@Html.DisplayNameFor(model => model.Projects[0].Name)
				</th>

				<th>
					@Html.DisplayNameFor(model => model.Projects[0].Description)
				</th>

				<th>
					@Html.DisplayNameFor(model => model.Projects[0].ProjectOwnerUserName)
				</th>

				<th>
					Actions
				</th>

			</tr>
		</thead>


		<tbody>
			@foreach (var item in Model.Projects)
			{
	<tr>

		<td>
			<a asp-action="View" asp-route-id="@item.Id">
				@Html.DisplayFor(modelItem => item.Name)
			</a>
		</td>

		<td class="width-limit">
			@Html.DisplayFor(modelItem => item.Description)
		</td>

		<td>
			@Html.DisplayFor(modelItem => item.ProjectOwnerUserName)
		</td>


		<td>
			<a asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-edit"></i></a>
			&nbsp;
			<a asp-action="Delete" asp-route-id="@item.Id"><i class="fas fa-trash"></i></a>

		</td>
	</tr>
	}
		</tbody>
	</table>
	</div>
}