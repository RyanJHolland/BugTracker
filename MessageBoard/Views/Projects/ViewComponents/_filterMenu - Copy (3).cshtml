<!-- filter menu -->
<div id="filter-dropdown-div1" class="dropdown">
	<button  id="filter-dropdown-button" class="btn btn-sm btn-default dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
		<i class="fas fa-filter"></i> Filters
	</button>
	<div  id="filter-dropdown-div2" class="dropdown-menu p-3">
		<div class="row">
	<!-- filter for Category -->
	<div class="d-inline-block p-2 mb-0 pb-0">

		<label for="AllCategories" style="height:1em;">
				
			@if(ViewContext.HttpContext.Request.Query["AllCategories"] == "on") 
			{
				<input 
					type="checkbox" 
					id="AllCategories" 
					name="AllCategories"checked >
			} 
			else 
			{
				<input 
					type="checkbox" 
					id="AllCategories" 
					name="AllCategories" 
						> 
			}
			<b>Category</b>
		</label>

		@foreach (var x in typeof(Ticket.CategoryEnum).GetEnumValues())
		{
			<br>
			<label for="@x" style="height:1em;">
				@if(ViewContext.HttpContext.Request.Query[x.ToString()] == "off") 
				{
					<input type="checkbox" id="@x" class="CategoryCheckbox" name="@x" > 
				} 
				else 
				{
					<input type="checkbox" id="@x" class="CategoryCheckbox" name="@x" checked> 
				}
					
				<input type="hidden" name="@x" value="off"> @* This is needed because an unchecked checkbox does not show up in the query params. *@
				@x
			</label>
		}
	</div>


	<!-- filter for Status -->
	<div class="d-inline-block p-2 mb-0 pb-0">

		<label for="AllStatuses" style="height:1em;">
			
			@if(ViewContext.HttpContext.Request.Query["AllStatuses"] == "on") 
			{
				<input 
					type="checkbox" 
					id="AllStatuses" 
					name="AllStatuses"checked >
			} 
			else 
			{
				<input 
					type="checkbox" 
					id="AllStatuses" 
					name="AllStatuses" 
						> 
			} <b>Status</b>

		</label>

		@foreach (var x in typeof(Ticket.StatusEnum).GetEnumValues())
		{
			<br>

			<label for="@x" style="height:1em;">
			@* If the query string includes that the checkbox is marked off, mark it off by not including "checked" in the <input>: *@ 
			@if (
				(ViewContext.HttpContext.Request.Query[x.ToString()] == "off" )
				||
				@* If the query string does not include the value, we mark it checked, because all of them default to on/checked, except for Resolved and Cancelled tickets, which we filter by default: *@ 
				(
					(x.ToString() == "Resolved" || x.ToString() == "Cancelled") 
					&& 
					!ViewContext.HttpContext.Request.Query.ContainsKey(x.ToString())
				)
			) 
			{
				<input type="checkbox" id="@x" class="StatusCheckbox" name="@x"> 
			} 
			else 
			{
				<input type="checkbox" id="@x" class="StatusCheckbox" name="@x" checked> 
			}
			<input type="hidden" name="@x" value="off">
			@x
		</label>
	}
	</div>


	<!-- filter for Priority -->
	<div class="d-inline-block form-group p-2 mb-0 pb-0">

		<label for="AllPriorities" style="height:1em;">
		@if(ViewContext.HttpContext.Request.Query["AllPriorities"] == "on") {
			<input 
				type="checkbox" 
				id="AllPriorities" 
				name="AllPriorities"checked >
		} else {
			<input 
				type="checkbox" 
				id="AllPriorities" 
				name="AllPriorities" 
					> 
		} <b>Priority</b>
		</label>

		@foreach (var x in typeof(Ticket.PriorityEnum).GetEnumValues())
		{
		<br>
		<label for="@x" style="height:1em;">
			@if(ViewContext.HttpContext.Request.Query[x.ToString()] == "off") {
				<input type="checkbox" id="@x" class="PriorityCheckbox" name="@x" > 
			} else {
				<input type="checkbox" id="@x" class="PriorityCheckbox" name="@x" checked> 
			}
			<input type="hidden" name="@x" value="off">
			@x</label>
		}
		</div>
	</div>
	</div>
</div>

	<!-- button that clears search -->
	<div class="float-right">
			<a href="?" history="set"><i class="fa fa-times"></i> Reset Filters</a>
	</div>