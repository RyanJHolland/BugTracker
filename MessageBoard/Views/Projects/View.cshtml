@using System.Linq;
@model TicketTracker.ViewModels.ViewProjectVM

@{ ViewData["Title"] = Model.Project.Name; }

@*
<!-- sidebar menu with search and filters -->
<div class="sidebar">

	<!-- Search input field -->
	<form class="">
		<label style="height:13px" for="search" class="font-weight-bold">Search</label>
		<input type="text"
					 id="search"
					 placeholder="search"
					 name="search"
					 value="@Model.DataPage.Filter"
					 max="100"
					 style="width: 100px; height: 20px;" />
		<!-- other necessary params (orderBy column and direction) -->
		<input type="hidden"
					 name="orderByColumn"
					 value="@Model.DataPage.OrderByColumn" />
		<input type="hidden"
					 name="orderDirection"
					 value="@Model.DataPage.OrderDirection" />
		<input type="hidden"
					 name="DataPage.PageSize"
					 value="@Model.DataPage.PageSize" />
	</form>
	<br />

	<!-- checkboxes -->
	<div class="">
		<!-- Category filter -->
		<div id="categoryCheckboxes" class="text-nowrap">
			<label for="categoryCheckboxes" class="font-weight-bold">
				Category
			</label>
			<div class="">
				@foreach (string enumVal in Enum.GetNames(typeof(Ticket.CategoryEnum)))
				{
	<div class="">
		<input type="checkbox"
					 checked
					 id="@enumVal"
					 value="@enumVal"
					 name="@enumVal" />
		<label class="" for="@enumVal">@enumVal</label>
	</div>}
			</div>
		</div>

		<br />
		<!-- Status filter -->
		<div id="statusCheckboxes" class=" text-nowrap">
			<label for="statusCheckboxes" class="font-weight-bold">Status</label>
			<div class="">
				@foreach (string enumVal in Enum.GetNames(typeof(Ticket.StatusEnum)))
				{
	<div class="">
		<input type="checkbox"
					 checked
					 id="@enumVal"
					 value="@enumVal"
					 name="@enumVal" />
		<label class="" for="@enumVal">@enumVal</label>
	</div>}
			</div>
		</div>

		<br />
		<!-- Priority filter -->
		<div id="priorityCheckboxes" class=" text-nowrap border-primary">
			<label for="priorityCheckboxes" class="font-weight-bold">Priority</label>
			<div class="">
				@foreach (string enumVal in Enum.GetNames(typeof(Ticket.PriorityEnum)))
				{
	<div class="">
		<input type="checkbox"
					 checked
					 id="@enumVal"
					 value="@enumVal"
					 name="@enumVal" />
		<label class="" for="@enumVal">@enumVal</label>
	</div>}
			</div>
		</div>
	</div>
</div>*@

<div class="main">
	<!-- project name -->
	<h2 class="mb-header">
		@Model.Project.Name
	</h2>

	<!-- new ticket link -->
	<a asp-controller="Tickets"
			asp-action="Create"
			asp-route-id="@Model.Project.Id"
			class="">
			<button class="btn btn-sm btn-primary">
		<i class="fas fa-plus-circle"></i> New Ticket</button></a>

	<!-- edit project link -->
	@if (Model.UserCanEditProject)
		{
				<a asp-controller="Projects"
						asp-action="Edit"
						asp-route-id="@Model.Project.Id">
									<button class="btn btn-sm btn-light">
		<i class="fas fa-edit"></i> Edit Project</button></a>
		}

	<!-- search options -->
	<div class="row">

		<!-- ticket count display -->
		<div class="col">
			<form>
				Viewing
				<!-- tickets on current page -->
				@(
					Model.DataPage.FilteredCount == 0
						? 0
						: (
								Model.DataPage.CurrentPage == 1
									? 1
									: Model.DataPage.PageSize * (Model.DataPage.CurrentPage - 1) + 1
							)
							+ "-" +
							(
								Model.DataPage.PageSize * Model.DataPage.CurrentPage >= Model.DataPage.FilteredCount
									? Model.DataPage.FilteredCount
									: Model.DataPage.PageSize * Model.DataPage.CurrentPage
							)
				)
				<!-- total tickets in query -->
				of @Model.DataPage.FilteredCount tickets,
				<!-- # of tickets to display -->
				<input type="text"
								name="PageSize"
								value="@Model.DataPage.PageSize"
								min="1"
								max="99999"
								style="width: 40px; height: 20px;" />
				per page.
				<!-- other necessary params (orderBy column and direction) -->
				<input type="hidden"
								name="orderByColumn"
								value="@Model.DataPage.OrderByColumn" />
				<input type="hidden"
								name="orderDirection"
								value="@Model.DataPage.OrderDirection" />
				<input type="hidden"
								name="Filter"
								value="@Model.DataPage.Filter" />
			</form>

			<!-- filter menu -->
			<div class="dropdown">
				<button class="btn btn-sm btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
					<i class="fas fa-filter"></i> Filters
				</button>
				<form class="dropdown-menu p-4" method="GET">
					<div class="row">
						<!-- filter for Category -->
						<div class="form-group p-2 border-right">
							<b>Category</b>
							<br>
						<input type="checkbox" id="AllCategories" name="AllCategories" onclick="toggleAll(this, 'Categories')" checked><label for="AllCategories">All</label><br>
							
							@foreach (var x in typeof(Ticket.CategoryEnum).GetEnumValues())
							{
								@if(ViewContext.HttpContext.Request.Query[x.ToString()] == "off") {
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Categories')"> 
								} else {
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Categories')" checked> 
								}
								<input type="hidden" name="@x" value="off"> /* This is needed because an unchecked checkbox does not show up in the query params. */
								<label for="@x" style="height:10px;">@x</label>
								<br>
							}
						</div>
						<!-- filter for Status -->
						<div class="form-group p-2 border-right">
							<b>Status</b>
							<br>
							<input type="checkbox" id="AllStatuses" name="AllStatuses" onclick="toggleAll(this, 'Statuses')"><label for="AllStatuses">All</label><br>
							@foreach (var x in typeof(Ticket.StatusEnum).GetEnumValues())
							{
								@* If the query string includes that the checkbox is marked off, mark it off by not including "checked" in the <input>: *@ 
								@if (
									(ViewContext.HttpContext.Request.Query[x.ToString()] == "off" )
									||
									@* If the query string does not include the value, we mark it checked, because all of them default to on/checked, except for Resolved and Cancelled tickets, which we filter by default: *@ 
									(
										(x.ToString() == "Resolved" || x.ToString() == "Cancelled") 
										&& 
										!ViewContext.HttpContext.Request.Query.ContainsKey(x.ToString())
									)
								) 
								{
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Statuses')"> 
								} 
								else 
								{
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Statuses')" checked> 
								}
								<input type="hidden" name="@x" value="off">
								<label for="@x">@x</label>
								<br>
							}
						</div>
						<!-- filter for Priority -->
						<div class="form-group p-2">
							<b>Priority</b>
							<br>
							<input type="checkbox" id="AllPriorities" name="AllPriorities" onclick="toggleAll(this, 'Priorities')" checked><label for="AllPriorities">All</label><br>
							@foreach (var x in typeof(Ticket.PriorityEnum).GetEnumValues())
							{
								@if(ViewContext.HttpContext.Request.Query[x.ToString()] == "off") {
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Priorities')"> 
								} else {
									<input type="checkbox" id="@x" name="@x" onclick="updateToggleAll('Priorities')" checked> 
								}
								<input type="hidden" name="@x" value="off">
								<label for="@x">@x</label>
								<br>
							}
						</div>
					</div>
					<!-- buttons -->
					<div>
						<!-- button that reloads page with chosen filters -->
						<button type="submit" class="btn btn-primary" label="Apply filters"><i class="far fa-thumbs-up"></i> Apply</button>
						<!--button that clears all filters -->
						<a href="?" history="set" class="btn btn-secondary ml-2" label="Reset filters to default"><i class="fa fa-times"></i> Reset</a>
					</div>
					<!-- other necessary params -->
					<input type="hidden"
									name="PageCount"
									value="@Model.DataPage.PageCount"
									min="1"
									max="99999"
									style="width: 40px; height: 20px;" />
					<input type="hidden"
									name="orderByColumn"
									value="@Model.DataPage.OrderByColumn" />
					<input type="hidden"
									name="orderDirection"
									value="@Model.DataPage.OrderDirection" />
					<input type="hidden"
									name="Filter"
									value="@Model.DataPage.Filter" />
				</form>
			</div>
		</div>

		<!-- search input field -->
		<div class="col-3">
			<form>
				<div class="input-group">
					<input type="text" name="filter" class="form-control" placeholder="Search..." value="@Model.DataPage.Filter">
					<div class="input-group-append">
							<button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
					</div>
					<!--button that clears all filters -->
					<a href="?" history="set" class="btn btn-light ml-2"><i class="fa fa-times"></i></a>
					<!-- other necessary params -->
					<input type="hidden"
									name="PageCount"
									value="@Model.DataPage.PageCount"
									min="1"
									max="99999"
									style="width: 40px; height: 20px;" />
					<input type="hidden"
									name="orderByColumn"
									value="@Model.DataPage.OrderByColumn" />
					<input type="hidden"
									name="orderDirection"
									value="@Model.DataPage.OrderDirection" />
					<input type="hidden"
									name="Filter"
									value="@Model.DataPage.Filter" />
				</div>
			</form>
		</div>
			</div>
			<br />
					<!-- Previous / Next Page links-->
			@if (Model.DataPage.PageSize < Model.DataPage.FilteredCount)
			{
			<div class="page-controls">
				<!-- Previous Page link -->
				@if (Model.DataPage.CurrentPage > 1)
				{
		<a asp-controller="Projects"
			 asp-action="View"
			 asp-route-id="@Model.Project.Id"
			 asp-route-pageSize="@Model.DataPage.PageSize"
			 asp-route-filter="@Model.DataPage.Filter"
			 asp-route-orderByColumn="@Model.DataPage.OrderByColumn"
			 asp-route-orderDirection="@Model.DataPage.OrderDirection"
			 asp-route-currentPage="@(Model.DataPage.CurrentPage - 1)"
			 alt="previous page of results">
			<button class="btn btn-sm btn-outline-secondary"><i class="fas fa-arrow-left"></i></button></a>
		} else {
			 <button class="btn btn-sm btn-outline-secondary disabled"><i class="fas fa-arrow-left"></i></button>
		}
				<!-- Next Page link -->
				@if (((Model.DataPage.CurrentPage ) * Model.DataPage.PageSize < Model.DataPage.FilteredCount))
				{
		<a asp-controller="Projects"
			 asp-action="View"
			 asp-route-id="@Model.Project.Id"
			 asp-route-pageSize="@Model.DataPage.PageSize"
			 asp-route-filter="@Model.DataPage.Filter"
			 asp-route-orderByColumn="@Model.DataPage.OrderByColumn"
			 asp-route-orderDirection="@Model.DataPage.OrderDirection"
			 asp-route-currentPage="@(Model.DataPage.CurrentPage + 1)"
			 alt="next page of results">
			<button class="btn btn-sm btn-outline-secondary ">
			<i class="fas fa-arrow-right"></i></button>
		</a>
		} else {
			<button class="btn btn-sm btn-outline-secondary disabled">
				<i class="fas fa-arrow-right"></i></button>
			}
			</div>
			}

	<!-- The actual search results table -->
	<table class="table">
		<!-- Header row -->
		<thead>
			<tr>

				<!-- table header for Category -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="Category"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "Category" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].Category)">
						@Html.DisplayNameFor(model => model.DataPage.Items[0].Category)
						@if (Model.DataPage.OrderByColumn == "Category")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>


				<!-- table header for Title -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="Title"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "Title" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].Title)">
						@Html.DisplayNameFor(model => model.DataPage.Items[0].Title)
						@if (Model.DataPage.OrderByColumn == "Title")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>


				<!-- table header for Status -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="Status"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "Status" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].Status)">
						 							@Html.DisplayNameFor(model => model.DataPage.Items[0].Status)


												@if (Model.DataPage.OrderByColumn == "Status")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>


				<!-- table header for Priority -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="Priority"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "Priority" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].Priority)">
						@Html.DisplayNameFor(model => model.DataPage.Items[0].Priority)
												@if (Model.DataPage.OrderByColumn == "Priority")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>


				<!-- table header for UserName -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="UserName"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "UserName" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].UserName)">
						@Html.DisplayNameFor(model => model.DataPage.Items[0].UserName)
												@if (Model.DataPage.OrderByColumn == "UserName")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>

				<!-- table header for CreationTime -->
				<th class="text-nowrap">
					<a class="table-header"
						 asp-controller="Projects"
						 asp-action="View"
						 asp-route-id="@Model.Project.Id"
						 asp-route-pageSize="@Model.DataPage.PageSize"
						 asp-route-filter="@Model.DataPage.Filter"
						 asp-route-orderByColumn="CreationTime"
						 asp-route-orderDirection="@(Model.DataPage.OrderByColumn == "CreationTime" && Model.DataPage.OrderDirection == "ASC" ? "DESC" : "ASC")"
						 alt="sort by @Html.DisplayNameFor(model => model.DataPage.Items[0].CreationTime)">
						@Html.DisplayNameFor(model => model.DataPage.Items[0].CreationTime)
												@if (Model.DataPage.OrderByColumn == "CreationTime")
						{
							if (Model.DataPage.OrderDirection == "ASC")
							{
								<i class="fas fa-sort-up"></i>
							}
							else
							{
								<i class="fas fa-sort-down"></i>
							}
						}	else
							{
								<img src="\img\sort.png" style="width:10px;"></img>
							}
					</a>
				</th>
			</tr>
		</thead>


		<tbody>
			<!-- the code below runs for each ticket -->
			@foreach (var ticket in Model.DataPage.Items)
			{
		<!-- a row of the table, representing one ticket -->
<tr>
		<!-- Ticket row: Category column -->
	<td>
		<!-- category -->
		@ticket.Category

						<!-- Category input -->
						@*
						<div class="form-group">
					@Html.DropDownListFor(m => ticket.Category, new SelectList(Enum.GetValues(typeof(Ticket.CategoryEnum))))
					<span asp-validation-for="Ticket.Category" class="text-danger"></span>
				</div>
		@* <div class="dropdown">
			<button class="btn btn-secondary dropdown-toggle" type="button" id="CategoryDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				@Html.DisplayFor(modelItem => ticket.Category)
			</button>
			<div class="dropdown-menu" aria-labelledby="CategoryDropdown">
				<form asp-controller="Tickets" asp-action="Edit" method="post">
				@for (int i = 0; i < Model.CategoryValues.Length; i++)
				{
					<input type="hidden" name="redirectURL" value="@Url.PageLink()">
					<input type="hidden" name="id" value="@ticket.Id">
					<input type="hidden" name="Title" value="@ticket.Title">
					<input type="hidden" name="Body" value="@ticket.Body">
					<input type="hidden" name="Priority" value="@ticket.Priority">
					<input type="hidden" name="Category" value="@i">
					<input type="hidden" name="Status" value="@ticket.Status">
					 <button class="dropdown-item" type="submit">
						 @Model.CategoryValues.ElementAt(i)
				 </button>
				}
				</form>
			</div>
		</div> *@
	</td>
		<!-- ticket title column -->
	<td>
		<a asp-controller="Tickets" asp-action="View" asp-route-id="@ticket.Id">
			<div style="height:100%;width:100%;">
				@Html.DisplayFor(modelItem => ticket.Title)
			</div>
		</a>
	</td>
		<!-- ticket status column -->
	<td>
		@Html.DisplayFor(modelItem => ticket.Status)
	</td>
		<!-- ticket priority column -->
	<td>
		@Html.DisplayFor(modelItem => ticket.Priority)
	</td>
		<!-- ticket owner name column -->
	<td>
		@Html.DisplayFor(modelItem => ticket.UserName)
	</td>
	<!-- ticket creation timestamp column -->
	<td>
		@Html.DisplayFor(modelItem => ticket.CreationTime)
	</td>
</tr>}
		</tbody>
	</table>
</div>




	<!-- Previous / Next Page links-->
	@if (Model.DataPage.PageSize < Model.DataPage.FilteredCount)
	{
	<div class="page-controls">
		<!-- Previous Page link -->
		@if (Model.DataPage.CurrentPage > 1)
		{
<a asp-controller="Projects"
	 asp-action="View"
	 asp-route-id="@Model.Project.Id"
	 asp-route-pageSize="@Model.DataPage.PageSize"
	 asp-route-filter="@Model.DataPage.Filter"
	 asp-route-orderByColumn="@Model.DataPage.OrderByColumn"
	 asp-route-orderDirection="@Model.DataPage.OrderDirection"
	 asp-route-currentPage="@(Model.DataPage.CurrentPage - 1)"
	 alt="previous page of results">
	<button class="btn btn-sm btn-outline-secondary"><i class="fas fa-arrow-left"></i></button></a>
} else {
	 <button class="btn btn-sm btn-outline-secondary disabled"><i class="fas fa-arrow-left"></i></button>
}
		<!-- Next Page link -->
		@if (((Model.DataPage.CurrentPage ) * Model.DataPage.PageSize < Model.DataPage.FilteredCount))
		{
<a asp-controller="Projects"
	 asp-action="View"
	 asp-route-id="@Model.Project.Id"
	 asp-route-pageSize="@Model.DataPage.PageSize"
	 asp-route-filter="@Model.DataPage.Filter"
	 asp-route-orderByColumn="@Model.DataPage.OrderByColumn"
	 asp-route-orderDirection="@Model.DataPage.OrderDirection"
	 asp-route-currentPage="@(Model.DataPage.CurrentPage + 1)"
	 alt="next page of results">
	<button class="btn btn-sm btn-outline-secondary ">
	<i class="fas fa-arrow-right"></i></button>
</a>
} else {
	<button class="btn btn-sm btn-outline-secondary disabled">
		<i class="fas fa-arrow-right"></i></button>
	}
	</div>
	}
